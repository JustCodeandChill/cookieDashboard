{"ast":null,"code":"import React from\"react\";import CornerIcon from\"./CornerIcon\";import{Dropdown,Icon}from\"semantic-ui-react\";var icons=[{mainIcon:\"tasks\",cornerIcon:\"circle\",cornerIconColor:\"red\"}];var tasks=[{icon:/*#__PURE__*/React.createElement(Icon,{color:\"red\",name:\"users\"}),content:\"Train new members\"},{icon:/*#__PURE__*/React.createElement(Icon,{color:\"red\",name:\"chart bar outline\"}),content:\"Meeting at 5pm\"}];var finishedTasks=[{icon:/*#__PURE__*/React.createElement(Icon,{color:\"green\",name:\"users\"}),content:\"Hired new members\"},{icon:/*#__PURE__*/React.createElement(Icon,{color:\"green\",name:\"star outline\"}),content:\"Passed CMR Test\"}];var TaskNotification=function TaskNotification(){return/*#__PURE__*/React.createElement(\"div\",{className:\"inline-block navbar-item notification\"},/*#__PURE__*/React.createElement(Dropdown,{icon:/*#__PURE__*/React.createElement(CornerIcon,icons[0])},/*#__PURE__*/React.createElement(Dropdown.Menu,null,/*#__PURE__*/React.createElement(Dropdown.Header,{content:\"You have \".concat(tasks.length,\" tasks\")}),/*#__PURE__*/React.createElement(Dropdown.Divider,null),tasks.map(function(task){return/*#__PURE__*/React.createElement(Dropdown.Item,Object.assign({},task,{key:task.content}));}),/*#__PURE__*/React.createElement(Dropdown.Header,{content:\"Recently fininshed tasks\"}),finishedTasks.map(function(task){return/*#__PURE__*/React.createElement(Dropdown.Item,Object.assign({},task,{key:task.content}));}))));};export default TaskNotification;","map":{"version":3,"sources":["/home/alexkimory/react-dashboard/client/src/components/navbar/TaskNotification.js"],"names":["React","CornerIcon","Dropdown","Icon","icons","mainIcon","cornerIcon","cornerIconColor","tasks","icon","content","finishedTasks","TaskNotification","length","map","task"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,QAAT,CAAmBC,IAAnB,KAA+B,mBAA/B,CAEA,GAAMC,CAAAA,KAAK,CAAG,CACZ,CACEC,QAAQ,CAAE,OADZ,CAEEC,UAAU,CAAE,QAFd,CAGEC,eAAe,CAAE,KAHnB,CADY,CAAd,CAQA,GAAMC,CAAAA,KAAK,CAAG,CACZ,CACEC,IAAI,cAAE,oBAAC,IAAD,EAAM,KAAK,CAAC,KAAZ,CAAkB,IAAI,CAAC,OAAvB,EADR,CAEEC,OAAO,CAAE,mBAFX,CADY,CAKZ,CACED,IAAI,cAAE,oBAAC,IAAD,EAAM,KAAK,CAAC,KAAZ,CAAkB,IAAI,CAAC,mBAAvB,EADR,CAEEC,OAAO,CAAE,gBAFX,CALY,CAAd,CAWA,GAAMC,CAAAA,aAAa,CAAG,CACpB,CACEF,IAAI,cAAE,oBAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAC,OAAzB,EADR,CAEEC,OAAO,CAAE,mBAFX,CADoB,CAKpB,CACED,IAAI,cAAE,oBAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAC,cAAzB,EADR,CAEEC,OAAO,CAAE,iBAFX,CALoB,CAAtB,CAWA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,sBACvB,2BAAK,SAAS,CAAC,uCAAf,eACE,oBAAC,QAAD,EAAU,IAAI,cAAE,oBAAC,UAAD,CAAgBR,KAAK,CAAC,CAAD,CAArB,CAAhB,eACE,oBAAC,QAAD,CAAU,IAAV,mBACE,oBAAC,QAAD,CAAU,MAAV,EAAiB,OAAO,oBAAcI,KAAK,CAACK,MAApB,UAAxB,EADF,cAEE,oBAAC,QAAD,CAAU,OAAV,MAFF,CAGGL,KAAK,CAACM,GAAN,CAAU,SAACC,IAAD,qBACT,oBAAC,QAAD,CAAU,IAAV,kBAAmBA,IAAnB,EAAyB,GAAG,CAAEA,IAAI,CAACL,OAAnC,GADS,EAAV,CAHH,cAME,oBAAC,QAAD,CAAU,MAAV,EAAiB,OAAO,2BAAxB,EANF,CAOGC,aAAa,CAACG,GAAd,CAAkB,SAACC,IAAD,qBACjB,oBAAC,QAAD,CAAU,IAAV,kBAAmBA,IAAnB,EAAyB,GAAG,CAAEA,IAAI,CAACL,OAAnC,GADiB,EAAlB,CAPH,CADF,CADF,CADuB,EAAzB,CAkBA,cAAeE,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\nimport CornerIcon from \"./CornerIcon\";\nimport { Dropdown, Icon } from \"semantic-ui-react\";\n\nconst icons = [\n  {\n    mainIcon: \"tasks\",\n    cornerIcon: \"circle\",\n    cornerIconColor: \"red\",\n  },\n];\n\nconst tasks = [\n  {\n    icon: <Icon color=\"red\" name=\"users\" />,\n    content: \"Train new members\",\n  },\n  {\n    icon: <Icon color=\"red\" name=\"chart bar outline\" />,\n    content: \"Meeting at 5pm\",\n  },\n];\n\nconst finishedTasks = [\n  {\n    icon: <Icon color=\"green\" name=\"users\" />,\n    content: \"Hired new members\",\n  },\n  {\n    icon: <Icon color=\"green\" name=\"star outline\" />,\n    content: \"Passed CMR Test\",\n  },\n];\n\nconst TaskNotification = () => (\n  <div className=\"inline-block navbar-item notification\">\n    <Dropdown icon={<CornerIcon {...icons[0]} />}>\n      <Dropdown.Menu>\n        <Dropdown.Header content={`You have ${tasks.length} tasks`} />\n        <Dropdown.Divider />\n        {tasks.map((task) => (\n          <Dropdown.Item {...task} key={task.content} />\n        ))}\n        <Dropdown.Header content={`Recently fininshed tasks`} />\n        {finishedTasks.map((task) => (\n          <Dropdown.Item {...task} key={task.content} />\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  </div>\n);\n\nexport default TaskNotification;\n"]},"metadata":{},"sourceType":"module"}