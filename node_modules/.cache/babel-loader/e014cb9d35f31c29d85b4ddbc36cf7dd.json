{"ast":null,"code":"import _classCallCheck from\"/home/alexkimory/react-dashboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/alexkimory/react-dashboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/alexkimory/react-dashboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/alexkimory/react-dashboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Chart}from\"chart.js\";import generateYearArray from\"../../../utils/generateYearArray\";import{generateRandomNumberArray,generateRandomPercentageNumberArray}from\"../../../utils/generateRandomNumber\";var SIZE=5;var BarChart=/*#__PURE__*/function(_React$Component){_inherits(BarChart,_React$Component);var _super=_createSuper(BarChart);function BarChart(){var _this;_classCallCheck(this,BarChart);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.chartRef=React.createRef();_this.componentDidMount=function(){_this.props.horizontal?_this.renderHorizontalChart():_this.renderChart();};_this.renderHorizontalChart=function(){var myChartRef=_this.chartRef.current.getContext(\"2d\");new Chart(myChartRef,{type:\"horizontalBar\",data:{labels:[\"5 stars\",\"4 stars\",\"3 stars\",\"2 stars\",\"1 star\"],datasets:[{label:\"Percentage (%)\",backgroundColor:[\"#fecd51\",\"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#ff5200\"],data:generateRandomPercentageNumberArray(5)}]},options:{legend:{display:false},title:{display:true,text:_this.props.chartTitle}}});// this.chartRef.current.style.backgroundColor = '#b5ead7'\n};_this.renderChart=function(){var myChartRef=_this.chartRef.current.getContext(\"2d\");new Chart(myChartRef,{type:\"bar\",data:{labels:generateYearArray(SIZE),datasets:[{label:\"dollar (thousand)\",backgroundColor:[\"#3e95cd\",\"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],data:generateRandomNumberArray(SIZE,1000)}]},options:{legend:{display:false},title:{display:true,text:_this.props.chartTitle},scales:{xAxes:[{gridLines:{offsetGridLines:true}}]}}});};return _this;}_createClass(BarChart,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{style:{marginBottom:\"30px\"}},/*#__PURE__*/React.createElement(\"h3\",{className:\"no-margin\"},this.props.text),/*#__PURE__*/React.createElement(\"canvas\",{height:this.props.height,className:\"gray-background round-radius\",style:{paddingBottom:\"15px\"},id:\"myChart\",ref:this.chartRef}));}}]);return BarChart;}(React.Component);export default BarChart;","map":{"version":3,"sources":["/home/alexkimory/react-dashboard/client/src/components/section/charts/BarChart.js"],"names":["React","Chart","generateYearArray","generateRandomNumberArray","generateRandomPercentageNumberArray","SIZE","BarChart","chartRef","createRef","componentDidMount","props","horizontal","renderHorizontalChart","renderChart","myChartRef","current","getContext","type","data","labels","datasets","label","backgroundColor","options","legend","display","title","text","chartTitle","scales","xAxes","gridLines","offsetGridLines","marginBottom","height","paddingBottom","Component"],"mappings":"wmBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,UAAtB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CACA,OACEC,yBADF,CAEEC,mCAFF,KAGO,qCAHP,CAIA,GAAMC,CAAAA,IAAI,CAAG,CAAb,C,GACMC,CAAAA,Q,+UACJC,Q,CAAWP,KAAK,CAACQ,SAAN,E,OAEXC,iB,CAAoB,UAAM,CACxB,MAAKC,KAAL,CAAWC,UAAX,CAAwB,MAAKC,qBAAL,EAAxB,CAAuD,MAAKC,WAAL,EAAvD,CACD,C,OAEDD,qB,CAAwB,UAAM,CAC5B,GAAME,CAAAA,UAAU,CAAG,MAAKP,QAAL,CAAcQ,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB,CACA,GAAIf,CAAAA,KAAJ,CAAUa,UAAV,CAAsB,CACpBG,IAAI,CAAE,eADc,CAEpBC,IAAI,CAAE,CACJC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,QAA7C,CADJ,CAEJC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,gBADT,CAEEC,eAAe,CAAE,CACf,SADe,CAEf,SAFe,CAGf,SAHe,CAIf,SAJe,CAKf,SALe,CAFnB,CASEJ,IAAI,CAAEd,mCAAmC,CAAC,CAAD,CAT3C,CADQ,CAFN,CAFc,CAkBpBmB,OAAO,CAAE,CACPC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADD,CAEPC,KAAK,CAAE,CACLD,OAAO,CAAE,IADJ,CAELE,IAAI,CAAE,MAAKjB,KAAL,CAAWkB,UAFZ,CAFA,CAlBW,CAAtB,EA2BA;AACD,C,OAEDf,W,CAAc,UAAM,CAClB,GAAMC,CAAAA,UAAU,CAAG,MAAKP,QAAL,CAAcQ,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB,CAEA,GAAIf,CAAAA,KAAJ,CAAUa,UAAV,CAAsB,CACpBG,IAAI,CAAE,KADc,CAEpBC,IAAI,CAAE,CACJC,MAAM,CAAEjB,iBAAiB,CAACG,IAAD,CADrB,CAEJe,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,mBADT,CAEEC,eAAe,CAAE,CACf,SADe,CAEf,SAFe,CAGf,SAHe,CAIf,SAJe,CAKf,SALe,CAFnB,CASEJ,IAAI,CAAEf,yBAAyB,CAACE,IAAD,CAAO,IAAP,CATjC,CADQ,CAFN,CAFc,CAkBpBkB,OAAO,CAAE,CACPC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADD,CAEPC,KAAK,CAAE,CACLD,OAAO,CAAE,IADJ,CAELE,IAAI,CAAE,MAAKjB,KAAL,CAAWkB,UAFZ,CAFA,CAMPC,MAAM,CAAE,CACNC,KAAK,CAAE,CACL,CACEC,SAAS,CAAE,CACTC,eAAe,CAAE,IADR,CADb,CADK,CADD,CAND,CAlBW,CAAtB,EAmCD,C,2EAEQ,CACP,mBACE,2BAAK,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAhB,CAAZ,eACE,0BAAI,SAAS,CAAC,WAAd,EAA2B,KAAKvB,KAAL,CAAWiB,IAAtC,CADF,cAEE,8BACE,MAAM,CAAE,KAAKjB,KAAL,CAAWwB,MADrB,CAEE,SAAS,CAAC,8BAFZ,CAGE,KAAK,CAAE,CAAEC,aAAa,CAAE,MAAjB,CAHT,CAIE,EAAE,CAAC,SAJL,CAKE,GAAG,CAAE,KAAK5B,QALZ,EAFF,CADF,CAYD,C,sBA5FoBP,KAAK,CAACoC,S,EA+F7B,cAAe9B,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport { Chart } from \"chart.js\";\nimport generateYearArray from \"../../../utils/generateYearArray\";\nimport {\n  generateRandomNumberArray,\n  generateRandomPercentageNumberArray,\n} from \"../../../utils/generateRandomNumber\";\nconst SIZE = 5;\nclass BarChart extends React.Component {\n  chartRef = React.createRef();\n\n  componentDidMount = () => {\n    this.props.horizontal ? this.renderHorizontalChart() : this.renderChart();\n  };\n  //Customize for customer satisfaction\n  renderHorizontalChart = () => {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: \"horizontalBar\",\n      data: {\n        labels: [\"5 stars\", \"4 stars\", \"3 stars\", \"2 stars\", \"1 star\"],\n        datasets: [\n          {\n            label: \"Percentage (%)\",\n            backgroundColor: [\n              \"#fecd51\",\n              \"#8e5ea2\",\n              \"#3cba9f\",\n              \"#e8c3b9\",\n              \"#ff5200\",\n            ],\n            data: generateRandomPercentageNumberArray(5),\n          },\n        ],\n      },\n      options: {\n        legend: { display: false },\n        title: {\n          display: true,\n          text: this.props.chartTitle,\n        },\n      },\n    });\n\n    // this.chartRef.current.style.backgroundColor = '#b5ead7'\n  };\n  //customize for 5-year-profit\n  renderChart = () => {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    new Chart(myChartRef, {\n      type: \"bar\",\n      data: {\n        labels: generateYearArray(SIZE),\n        datasets: [\n          {\n            label: \"dollar (thousand)\",\n            backgroundColor: [\n              \"#3e95cd\",\n              \"#8e5ea2\",\n              \"#3cba9f\",\n              \"#e8c3b9\",\n              \"#c45850\",\n            ],\n            data: generateRandomNumberArray(SIZE, 1000),\n          },\n        ],\n      },\n      options: {\n        legend: { display: false },\n        title: {\n          display: true,\n          text: this.props.chartTitle,\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                offsetGridLines: true,\n              },\n            },\n          ],\n        },\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ marginBottom: \"30px\" }}>\n        <h3 className=\"no-margin\">{this.props.text}</h3>\n        <canvas\n          height={this.props.height}\n          className=\"gray-background round-radius\"\n          style={{ paddingBottom: \"15px\" }}\n          id=\"myChart\"\n          ref={this.chartRef}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}