{"ast":null,"code":"var _jsxFileName = \"/home/alexkimory/react-test/src/components/TaskNotification.js\";\nimport React from \"react\";\nimport CornerIcon from \"./CornerIcon\";\nimport { Dropdown, Icon } from \"semantic-ui-react\";\nconst icons = [{\n  mainIcon: \"tasks\",\n  cornerIcon: \"circle red\"\n}];\nconst tasks = [{\n  icon: /*#__PURE__*/React.createElement(Icon, {\n    color: \"red\",\n    name: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }),\n  content: \"3 new members left group\"\n}, {\n  icon: /*#__PURE__*/React.createElement(Icon, {\n    color: \"green\",\n    name: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }),\n  content: \"your profile updated\"\n}];\nconst finishedTasks = [{\n  icon: /*#__PURE__*/React.createElement(Icon, {\n    color: \"red\",\n    name: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }),\n  content: \"3 new members left group\"\n}, {\n  icon: /*#__PURE__*/React.createElement(Icon, {\n    color: \"green\",\n    name: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }),\n  content: \"your profile updated\"\n}];\n\nconst TaskNotification = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"inline-block notification\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Dropdown, {\n  icon: /*#__PURE__*/React.createElement(CornerIcon, Object.assign({}, icons[0], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Dropdown.Menu, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Dropdown.Header, {\n  content: `You have ${tasks.length} tasks`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n}), tasks.map(task => /*#__PURE__*/React.createElement(Dropdown.Item, Object.assign({}, task, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(Dropdown.Header, {\n  content: `Recently fininshed tasks`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }\n}), finishedTasks.map(task => /*#__PURE__*/React.createElement(Dropdown.Item, Object.assign({}, task, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }\n}))))));\n\nexport default TaskNotification;","map":{"version":3,"sources":["/home/alexkimory/react-test/src/components/TaskNotification.js"],"names":["React","CornerIcon","Dropdown","Icon","icons","mainIcon","cornerIcon","tasks","icon","content","finishedTasks","TaskNotification","length","map","task"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,mBAA/B;AAEA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,QAAQ,EAAE,OADZ;AAEEC,EAAAA,UAAU,EAAE;AAFd,CADY,CAAd;AAOA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAEEC,EAAAA,OAAO,EAAE;AAFX,CADY,EAKZ;AACED,EAAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAEEC,EAAAA,OAAO,EAAE;AAFX,CALY,CAAd;AAWA,MAAMC,aAAa,GAAG,CAClB;AACEF,EAAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAEEC,EAAAA,OAAO,EAAE;AAFX,CADkB,EAKlB;AACED,EAAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAEEC,EAAAA,OAAO,EAAE;AAFX,CALkB,CAAtB;;AAYA,MAAME,gBAAgB,GAAG,mBACvB;AAAK,EAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,IAAI,eAAE,oBAAC,UAAD,oBAAgBP,KAAK,CAAC,CAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,EAAA,OAAO,EAAG,YAAWG,KAAK,CAACK,MAAO,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGGL,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACT,oBAAC,QAAD,CAAU,IAAV,oBAAmBA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADD,CAHH,eAME,oBAAC,QAAD,CAAU,MAAV;AAAiB,EAAA,OAAO,EAAG,0BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,EAOGJ,aAAa,CAACG,GAAd,CAAmBC,IAAD,iBACjB,oBAAC,QAAD,CAAU,IAAV,oBAAmBA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADD,CAPH,CADF,CADF,CADF;;AAkBA,eAAeH,gBAAf","sourcesContent":["import React from \"react\";\nimport CornerIcon from \"./CornerIcon\";\nimport { Dropdown, Icon } from \"semantic-ui-react\";\n\nconst icons = [\n  {\n    mainIcon: \"tasks\",\n    cornerIcon: \"circle red\",\n  },\n];\n\nconst tasks = [\n  {\n    icon: <Icon color=\"red\" name=\"users\" />,\n    content: \"3 new members left group\",\n  },\n  {\n    icon: <Icon color=\"green\" name=\"users\" />,\n    content: \"your profile updated\",\n  },\n];\n\nconst finishedTasks = [\n    {\n      icon: <Icon color=\"red\" name=\"users\" />,\n      content: \"3 new members left group\",\n    },\n    {\n      icon: <Icon color=\"green\" name=\"users\" />,\n      content: \"your profile updated\",\n    },\n  ];\n  \n\nconst TaskNotification = () => (\n  <div className=\"inline-block notification\">\n    <Dropdown icon={<CornerIcon {...icons[0]} />}>\n      <Dropdown.Menu>\n        <Dropdown.Header content={`You have ${tasks.length} tasks`} />\n        <Dropdown.Divider />\n        {tasks.map((task) => (\n          <Dropdown.Item {...task} />\n        ))}\n        <Dropdown.Header content={`Recently fininshed tasks`} />\n        {finishedTasks.map((task) => (\n          <Dropdown.Item {...task} />\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  </div>\n);\n\nexport default TaskNotification;\n"]},"metadata":{},"sourceType":"module"}