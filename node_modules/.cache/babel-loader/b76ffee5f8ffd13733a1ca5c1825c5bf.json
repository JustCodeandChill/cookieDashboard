{"ast":null,"code":"var _jsxFileName = \"/home/alexkimory/react-test/src/components/section/Section.js\";\nimport React from \"react\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport \"../../styles/Dashboard.css\"; //charts import\n\nimport ChangableStatistic from \"./charts/ChangableStatistic\";\nimport UnchangeableStatiscitc from \"./charts/UnchangableStatistic\";\nimport TimeSerie from \"./charts/TimeSerie\";\nimport DoughnutChart from \"./charts/Doughnut\";\nimport BarChart from \"./charts/BarChart\";\nimport PolarChart from \"./charts/PolarChart\";\nimport List from './charts/List'; //chats import\n\nimport ChatSection from \"./chats/ChatSection\";\n\nconst Section = () => /*#__PURE__*/React.createElement(Grid, {\n  divided: \"vertically\",\n  className: \"section\",\n  stackable: true,\n  columns: \"equal\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Grid.Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Grid.Column, {\n  width: 4,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(ChangableStatistic, {\n  name: \"star\",\n  color: \"green\",\n  degreeOfChange: 100,\n  text: \"Cookie Sold\",\n  label: \"today\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(ChangableStatistic, {\n  name: \"thumbs down\",\n  color: \"red\",\n  degreeOfChange: 1.05,\n  text: \"Cookie Wasted\",\n  label: \"today\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(UnchangeableStatiscitc, {\n  name: \"pointing right\",\n  color: \"green\",\n  text: \"Daily Estimated Profit\",\n  label: \"$\",\n  number: \"5600\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(UnchangeableStatiscitc, {\n  name: \"pointing right\",\n  color: \"red\",\n  text: \"Daily Estimated Cost\",\n  label: \"$\",\n  number: \"1470\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(List, {\n  green: true,\n  text: \"Best seller cookie\",\n  data: [\"1st Mommy Chocolate Chip\", \"2nd Cherry Blossom Sweeet Pie\", \"3rd 3-stacks-vanilla Pie\"],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(List, {\n  green: false,\n  text: \"Worst seller cookie\",\n  data: [\"1st Raisin Extra Sour\", \"2nd Dark Chocolate Pie\", \"3rd Rainbow Twisted\"],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Grid.Column, {\n  width: 7,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(TimeSerie, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(BarChart, {\n  text: \"Yearly Profit\",\n  chartTitle: \"The last 5 year profit (thousand dollars)\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Grid.Column, {\n  width: 5,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(DoughnutChart, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(BarChart, {\n  horizontal: true,\n  text: \"Customer satisfaction\",\n  chartTitle: `In the first 6 months of ${new Date().getUTCFullYear()}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(PolarChart, {\n  text: \"Customer by nationality\",\n  chartTitle: `Quantity of customer nationality`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(ChatSection, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }\n}));\n\nexport default Section;","map":{"version":3,"sources":["/home/alexkimory/react-test/src/components/section/Section.js"],"names":["React","Grid","Image","ChangableStatistic","UnchangeableStatiscitc","TimeSerie","DoughnutChart","BarChart","PolarChart","List","ChatSection","Section","Date","getUTCFullYear"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport \"../../styles/Dashboard.css\";\n//charts import\nimport ChangableStatistic from \"./charts/ChangableStatistic\";\nimport UnchangeableStatiscitc from \"./charts/UnchangableStatistic\";\nimport TimeSerie from \"./charts/TimeSerie\";\nimport DoughnutChart from \"./charts/Doughnut\";\nimport BarChart from \"./charts/BarChart\";\nimport PolarChart from \"./charts/PolarChart\";\nimport List from './charts/List';\n//chats import\nimport ChatSection from \"./chats/ChatSection\";\n\nconst Section = () => (\n  <Grid divided='vertically' className=\"section\" stackable columns=\"equal\">\n    {/* First Row contain all the charts */}\n    <Grid.Row>\n      <Grid.Column width={4}>\n        <ChangableStatistic\n          name=\"star\"\n          color=\"green\"\n          degreeOfChange={100}\n          text=\"Cookie Sold\"\n          label=\"today\"\n        />\n        <ChangableStatistic\n          name=\"thumbs down\"\n          color=\"red\"\n          degreeOfChange={1.05}\n          text=\"Cookie Wasted\"\n          label=\"today\"\n        />\n        <UnchangeableStatiscitc\n          name=\"pointing right\"\n          color=\"green\"\n          text=\"Daily Estimated Profit\"\n          label=\"$\"\n          number=\"5600\"\n        />\n        <UnchangeableStatiscitc\n          name=\"pointing right\"\n          color=\"red\"\n          text=\"Daily Estimated Cost\"\n          label=\"$\"\n          number=\"1470\"\n        />\n        <List green text=\"Best seller cookie\" data={[\"1st Mommy Chocolate Chip\", \"2nd Cherry Blossom Sweeet Pie\", \"3rd 3-stacks-vanilla Pie\"]} />\n        <List green={false} text=\"Worst seller cookie\" data={[\"1st Raisin Extra Sour\", \"2nd Dark Chocolate Pie\", \"3rd Rainbow Twisted\"]} />\n      </Grid.Column>\n      <Grid.Column width={7}>\n        <TimeSerie />\n        <BarChart\n          text=\"Yearly Profit\"\n          chartTitle=\"The last 5 year profit (thousand dollars)\"\n        />\n      </Grid.Column>\n\n      <Grid.Column width={5}>\n        <DoughnutChart />\n        <BarChart\n          horizontal\n          text=\"Customer satisfaction\"\n          chartTitle={`In the first 6 months of ${new Date().getUTCFullYear()}`}\n        />\n        <PolarChart\n          text=\"Customer by nationality\"\n          chartTitle={`Quantity of customer nationality`}\n        />\n      </Grid.Column>\n    </Grid.Row>\n\n{/* Second Row */}\n    <ChatSection />\n  </Grid>\n);\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}