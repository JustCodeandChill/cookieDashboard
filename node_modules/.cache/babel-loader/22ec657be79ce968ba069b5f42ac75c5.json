{"ast":null,"code":"import _classCallCheck from\"/home/alexkimory/react-dashboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/alexkimory/react-dashboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/alexkimory/react-dashboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/alexkimory/react-dashboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Statistic,Icon}from\"semantic-ui-react\";import\"../../../styles/Statistic.css\";var ChangableStatistic=/*#__PURE__*/function(_React$Component){_inherits(ChangableStatistic,_React$Component);var _super=_createSuper(ChangableStatistic);function ChangableStatistic(){var _this;_classCallCheck(this,ChangableStatistic);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={count:1000};_this.componentDidMount=function(){_this.updateCount();};_this.updateCount=function(){var newCount;setInterval(function(){newCount=Math.floor(_this.state.count+(Math.random()*10+_this.props.degreeOfChange));_this.setState({count:newCount});},2000);};_this.renderContent=function(){return/*#__PURE__*/React.createElement(\"div\",{style:{marginBottom:'30px'}},/*#__PURE__*/React.createElement(\"h3\",{className:\"heading\",style:{marginBottom:'0px'}},_this.props.text),/*#__PURE__*/React.createElement(\"div\",{className:\"statistic-container \"},/*#__PURE__*/React.createElement(Icon,{className:\"icon-margin\",name:_this.props.name,size:\"big\",style:{color:\"\".concat(_this.props.color)}}),/*#__PURE__*/React.createElement(Statistic,{className:\"round-radius\",style:{paddingLeft:'50px'}},/*#__PURE__*/React.createElement(Statistic.Value,null,_this.state.count),/*#__PURE__*/React.createElement(Statistic.Label,null,_this.props.label))));};return _this;}_createClass(ChangableStatistic,[{key:\"render\",value:function render(){return this.renderContent();}}]);return ChangableStatistic;}(React.Component);export default ChangableStatistic;","map":{"version":3,"sources":["/home/alexkimory/react-dashboard/client/src/components/section/charts/ChangableStatistic.js"],"names":["React","Statistic","Icon","ChangableStatistic","state","count","componentDidMount","updateCount","newCount","setInterval","Math","floor","random","props","degreeOfChange","setState","renderContent","marginBottom","text","name","color","paddingLeft","label","Component"],"mappings":"wmBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,IAApB,KAAgC,mBAAhC,CACA,MAAO,+BAAP,C,GACMC,CAAAA,kB,uXAEJC,K,CAAQ,CACNC,KAAK,CAAE,IADD,C,OAIRC,iB,CAAoB,UAAM,CACxB,MAAKC,WAAL,GACD,C,OAGDA,W,CAAc,UAAM,CAClB,GAAIC,CAAAA,QAAJ,CACAC,WAAW,CAAC,UAAM,CAChBD,QAAQ,CAAGE,IAAI,CAACC,KAAL,CACT,MAAKP,KAAL,CAAWC,KAAX,EAAoBK,IAAI,CAACE,MAAL,GAAgB,EAAhB,CAAqB,MAAKC,KAAL,CAAWC,cAApD,CADS,CAAX,CAGA,MAAKC,QAAL,CAAc,CAAEV,KAAK,CAAEG,QAAT,CAAd,EACD,CALU,CAKR,IALQ,CAAX,CAMD,C,OAEDQ,a,CAAgB,UAAM,CACpB,mBACE,2BAAK,KAAK,CAAE,CAACC,YAAY,CAAC,MAAd,CAAZ,eACE,0BAAI,SAAS,CAAC,SAAd,CAAwB,KAAK,CAAE,CAACA,YAAY,CAAC,KAAd,CAA/B,EAAsD,MAAKJ,KAAL,CAAWK,IAAjE,CADF,cAEE,2BAAK,SAAS,CAAC,sBAAf,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,aAAhB,CAA8B,IAAI,CAAE,MAAKL,KAAL,CAAWM,IAA/C,CAAqD,IAAI,CAAC,KAA1D,CAAgE,KAAK,CAAE,CAACC,KAAK,WAAK,MAAKP,KAAL,CAAWO,KAAhB,CAAN,CAAvE,EADF,cAEE,oBAAC,SAAD,EAAW,SAAS,CAAC,cAArB,CAAoC,KAAK,CAAE,CAACC,WAAW,CAAC,MAAb,CAA3C,eACE,oBAAC,SAAD,CAAW,KAAX,MAAkB,MAAKjB,KAAL,CAAWC,KAA7B,CADF,cAEE,oBAAC,SAAD,CAAW,KAAX,MAAkB,MAAKQ,KAAL,CAAWS,KAA7B,CAFF,CAFF,CAFF,CADF,CAYD,C,qFACQ,CACP,MAAO,MAAKN,aAAL,EAAP,CACD,C,gCArC8BhB,KAAK,CAACuB,S,EAwCvC,cAAepB,CAAAA,kBAAf","sourcesContent":["import React from \"react\";\nimport { Statistic, Icon } from \"semantic-ui-react\";\nimport \"../../../styles/Statistic.css\";\nclass ChangableStatistic extends React.Component {\n  //Change the default number here\n  state = {\n    count: 1000,\n  };\n\n  componentDidMount = () => {\n    this.updateCount();\n  };\n\n  //Increase number randomly every 2 seconds\n  updateCount = () => {\n    let newCount;\n    setInterval(() => {\n      newCount = Math.floor(\n        this.state.count + (Math.random() * 10 + this.props.degreeOfChange)\n      );\n      this.setState({ count: newCount });\n    }, 2000);\n  };\n\n  renderContent = () => {\n    return (\n      <div style={{marginBottom:'30px'}}>\n        <h3 className=\"heading\" style={{marginBottom:'0px'}}>{this.props.text}</h3>\n        <div className=\"statistic-container \">\n          <Icon className=\"icon-margin\" name={this.props.name} size=\"big\" style={{color: `${this.props.color}`}}/>\n          <Statistic className=\"round-radius\" style={{paddingLeft:'50px'}}>\n            <Statistic.Value>{this.state.count}</Statistic.Value>\n            <Statistic.Label>{this.props.label}</Statistic.Label>\n          </Statistic>\n        </div>\n      </div>\n    );\n  };\n  render() {\n    return this.renderContent();\n  }\n}\n\nexport default ChangableStatistic;\n"]},"metadata":{},"sourceType":"module"}