{"ast":null,"code":"var _jsxFileName = \"/home/alexkimory/react-test/src/components/section/ChangableStatistic.js\";\nimport React from \"react\";\nimport { Statistic } from \"semantic-ui-react\";\n\nclass ChangableStatistic extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 1000\n    };\n\n    this.componentDidMount = () => {\n      this.updateCount();\n    };\n\n    this.updateCount = () => {\n      let newCount;\n      setInterval(() => {\n        console.log('before count: state.count', this.state.count, ' new amount:', Math.random(10));\n        newCount = Math.floor(this.state.count + Math.random(30) * 10);\n        console.log(newCount);\n        this.setState({\n          count: newCount\n        });\n        console.log(this.state.count);\n      }, 2000);\n    };\n\n    this.renderContent = () => {\n      return /*#__PURE__*/React.createElement(Statistic, {\n        horizontal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Statistic.Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, this.state.count), /*#__PURE__*/React.createElement(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, this.props.text));\n    };\n  }\n\n  render() {\n    return this.renderContent();\n  }\n\n}\n\nexport default ChangableStatistic;","map":{"version":3,"sources":["/home/alexkimory/react-test/src/components/section/ChangableStatistic.js"],"names":["React","Statistic","ChangableStatistic","Component","state","count","componentDidMount","updateCount","newCount","setInterval","console","log","Math","random","floor","setState","renderContent","props","text","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,MAAMC,kBAAN,SAAiCF,KAAK,CAACG,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAE/CC,KAF+C,GAEvC;AACNC,MAAAA,KAAK,EAAG;AADF,KAFuC;;AAAA,SAM/CC,iBAN+C,GAM3B,MAAM;AACxB,WAAKC,WAAL;AACD,KAR8C;;AAAA,SAW/CA,WAX+C,GAWjC,MAAM;AAClB,UAAIC,QAAJ;AACAC,MAAAA,WAAW,CAAC,MAAM;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC,KAAKP,KAAL,CAAWC,KAApD,EAA2D,cAA3D,EAA2EO,IAAI,CAACC,MAAL,CAAY,EAAZ,CAA3E;AACAL,QAAAA,QAAQ,GAAGI,IAAI,CAACE,KAAL,CAAW,KAAKV,KAAL,CAAWC,KAAX,GAAmBO,IAAI,CAACC,MAAL,CAAY,EAAZ,IAAgB,EAA9C,CAAX;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,aAAKO,QAAL,CAAc;AAACV,UAAAA,KAAK,EAAGG;AAAT,SAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,KAAvB;AACD,OANU,EAMR,IANQ,CAAX;AAOD,KApB8C;;AAAA,SAsB/CW,aAtB+C,GAsB/B,MAAM;AACpB,0BACE,oBAAC,SAAD;AAAW,QAAA,UAAU,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB,KAAKZ,KAAL,CAAWC,KAA7B,CADF,eAEE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB,KAAKY,KAAL,CAAWC,IAA7B,CAFF,CADF;AAMD,KA7B8C;AAAA;;AA8B/CC,EAAAA,MAAM,GAAG;AAEP,WAAO,KAAKH,aAAL,EAAP;AACD;;AAjC8C;;AAoCjD,eAAed,kBAAf","sourcesContent":["import React from \"react\";\nimport { Statistic } from \"semantic-ui-react\";\n\nclass ChangableStatistic extends React.Component {\n  //Change the default number here\n  state = {\n    count : 1000\n  }\n\n  componentDidMount = () => {\n    this.updateCount();\n  }\n\n  //Increase number randomly every 2 seconds\n  updateCount = () => {\n    let newCount;\n    setInterval(() => {\n      console.log('before count: state.count', this.state.count, ' new amount:', Math.random(10))\n      newCount = Math.floor(this.state.count + Math.random(30)*10);\n      console.log(newCount)\n      this.setState({count : newCount})\n      console.log(this.state.count)\n    }, 2000)\n  }\n\n  renderContent = () => {\n    return (\n      <Statistic horizontal>\n        <Statistic.Value>{this.state.count}</Statistic.Value>\n        <Statistic.Label>{this.props.text}</Statistic.Label>\n      </Statistic>\n    );\n  };\n  render() {\n\n    return this.renderContent();\n  }\n}\n\nexport default ChangableStatistic;\n"]},"metadata":{},"sourceType":"module"}