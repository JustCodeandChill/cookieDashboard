{"ast":null,"code":"import React from\"react\";import{Grid,Image,Icon}from\"semantic-ui-react\";var users=[{src:\"https://react.semantic-ui.com/images/avatar/small/rachel.png\",name:\"Anna Schznerei\",icon:{name:\"circle\",status:\"Offline\",color:'red'},message:\"We are having an unexpected large food order. We need you to confirm.\"},{src:\"https://react.semantic-ui.com/images/avatar/small/lindsay.png\",name:\"Jane Doe\",icon:{name:\"circle\",status:\"Online\",color:'green'},message:\"Your business plan for the next month was approved by the counsel. Please come to my office and fill out essential documents \",file:\"Form HSG412.docx\"},{src:\"https://react.semantic-ui.com/images/avatar/small/matthew.png\",name:\"Alex Harmony\",icon:{name:\"circle\",status:\"Online\",color:'green'},message:\"Hey man, there are new ingredient imported yesterday. Would you teach me how to check it at 11a.m?\"}];export default(function(){return/*#__PURE__*/React.createElement(Grid,{divided:\"vertically\",stackable:true},/*#__PURE__*/React.createElement(Grid.Row,{columns:1},/*#__PURE__*/React.createElement(Grid.Column,null,/*#__PURE__*/React.createElement(\"div\",{className:\"message border\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message-title\"},\"Chat message\"),/*#__PURE__*/React.createElement(\"ul\",{className:\"message-list\"},users.map(function(user){return/*#__PURE__*/React.createElement(\"li\",{className:\"message-item\",key:user.name},/*#__PURE__*/React.createElement(Image,{className:\"custom-avatar\",src:user.src}),/*#__PURE__*/React.createElement(\"div\",{className:\"message-chat\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message-chat-username\",style:{color:user.icon.color}},user.name,\" \",/*#__PURE__*/React.createElement(Icon,{name:user.icon.name},user.icon.status)),/*#__PURE__*/React.createElement(\"span\",null,user.message),user.file?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Icon,{name:\"file outline\"}),user.file):null));}),/*#__PURE__*/React.createElement(\"div\",{className:\"message-answer\"},/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Type message...\",className:\"message-answer-input\"}),/*#__PURE__*/React.createElement(Icon,{name:\"pencil alternate\",color:\"grey\"})))))));});","map":{"version":3,"sources":["/home/alexkimory/react-dashboard/client/src/components/section/chats/Message.js"],"names":["React","Grid","Image","Icon","users","src","name","icon","status","color","message","file","map","user"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,IAAtB,KAAkC,mBAAlC,CAEA,GAAIC,CAAAA,KAAK,CAAG,CACV,CACEC,GAAG,CAAE,8DADP,CAEEC,IAAI,CAAE,gBAFR,CAGEC,IAAI,CAAE,CACJD,IAAI,CAAE,QADF,CAEJE,MAAM,CAAE,SAFJ,CAGJC,KAAK,CAAC,KAHF,CAHR,CAQEC,OAAO,CACL,uEATJ,CADU,CAYV,CACEL,GAAG,CAAE,+DADP,CAEEC,IAAI,CAAE,UAFR,CAGEC,IAAI,CAAE,CACJD,IAAI,CAAE,QADF,CAEJE,MAAM,CAAE,QAFJ,CAGJC,KAAK,CAAC,OAHF,CAHR,CAQEC,OAAO,CACL,+HATJ,CAUEC,IAAI,CAAE,kBAVR,CAZU,CAwBV,CACEN,GAAG,CAAE,+DADP,CAEEC,IAAI,CAAE,cAFR,CAGEC,IAAI,CAAE,CACJD,IAAI,CAAE,QADF,CAEJE,MAAM,CAAE,QAFJ,CAGJC,KAAK,CAAC,OAHF,CAHR,CAQEC,OAAO,CACL,oGATJ,CAxBU,CAAZ,CAoCA,eAAe,UAAM,CACnB,mBACE,oBAAC,IAAD,EAAM,OAAO,CAAC,YAAd,CAA2B,SAAS,KAApC,eACE,oBAAC,IAAD,CAAM,GAAN,EAAU,OAAO,CAAE,CAAnB,eACE,oBAAC,IAAD,CAAM,MAAN,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BAAK,SAAS,CAAC,eAAf,iBADF,cAEE,0BAAI,SAAS,CAAC,cAAd,EACGN,KAAK,CAACQ,GAAN,CAAU,SAACC,IAAD,CAAU,CACnB,mBACE,0BAAI,SAAS,CAAC,cAAd,CAA6B,GAAG,CAAEA,IAAI,CAACP,IAAvC,eACE,oBAAC,KAAD,EAAO,SAAS,CAAC,eAAjB,CAAiC,GAAG,CAAEO,IAAI,CAACR,GAA3C,EADF,cAEE,2BAAK,SAAS,CAAC,cAAf,eACE,2BAAK,SAAS,CAAC,uBAAf,CAAuC,KAAK,CAAE,CAACI,KAAK,CAACI,IAAI,CAACN,IAAL,CAAUE,KAAjB,CAA9C,EACGI,IAAI,CAACP,IADR,CACc,GADd,cAEE,oBAAC,IAAD,EAAM,IAAI,CAAEO,IAAI,CAACN,IAAL,CAAUD,IAAtB,EAA6BO,IAAI,CAACN,IAAL,CAAUC,MAAvC,CAFF,CADF,cAKE,gCAAOK,IAAI,CAACH,OAAZ,CALF,CAMGG,IAAI,CAACF,IAAL,cACC,4CACE,oBAAC,IAAD,EAAM,IAAI,CAAC,cAAX,EADF,CAEGE,IAAI,CAACF,IAFR,CADD,CAKG,IAXN,CAFF,CADF,CAkBD,CAnBA,CADH,cAqBE,2BAAK,SAAS,CAAC,gBAAf,eACE,6BAAO,WAAW,CAAC,iBAAnB,CAAqC,SAAS,CAAC,sBAA/C,EADF,cAEE,oBAAC,IAAD,EAAM,IAAI,CAAC,kBAAX,CAA8B,KAAK,CAAC,MAApC,EAFF,CArBF,CAFF,CADF,CADF,CADF,CADF,CAqCD,CAtCD","sourcesContent":["import React from \"react\";\nimport { Grid, Image, Icon } from \"semantic-ui-react\";\n\nlet users = [\n  {\n    src: \"https://react.semantic-ui.com/images/avatar/small/rachel.png\",\n    name: \"Anna Schznerei\",\n    icon: {\n      name: \"circle\",\n      status: \"Offline\",\n      color:'red'\n    },\n    message:\n      \"We are having an unexpected large food order. We need you to confirm.\",\n  },\n  {\n    src: \"https://react.semantic-ui.com/images/avatar/small/lindsay.png\",\n    name: \"Jane Doe\",\n    icon: {\n      name: \"circle\",\n      status: \"Online\",\n      color:'green'\n    },\n    message:\n      \"Your business plan for the next month was approved by the counsel. Please come to my office and fill out essential documents \",\n    file: \"Form HSG412.docx\",\n  },\n  {\n    src: \"https://react.semantic-ui.com/images/avatar/small/matthew.png\",\n    name: \"Alex Harmony\",\n    icon: {\n      name: \"circle\",\n      status: \"Online\",\n      color:'green'\n    },\n    message:\n      \"Hey man, there are new ingredient imported yesterday. Would you teach me how to check it at 11a.m?\",\n  },\n];\nexport default () => {\n  return (\n    <Grid divided=\"vertically\" stackable >\n      <Grid.Row columns={1} >\n        <Grid.Column>\n          <div className=\"message border\" >\n            <div className=\"message-title\">Chat message</div>\n            <ul className=\"message-list\">\n              {users.map((user) => {\n                return (\n                  <li className=\"message-item\" key={user.name}>\n                    <Image className=\"custom-avatar\" src={user.src} />\n                    <div className=\"message-chat\">\n                      <div className=\"message-chat-username\" style={{color:user.icon.color}}>\n                        {user.name}{\" \"}\n                        <Icon name={user.icon.name}>{user.icon.status}</Icon>\n                      </div>\n                      <span>{user.message}</span>\n                      {user.file ? (\n                        <div>\n                          <Icon name=\"file outline\" />\n                          {user.file}\n                        </div>\n                      ) : null}\n                    </div>\n                  </li>\n                );\n              })}\n              <div className=\"message-answer\">\n                <input placeholder=\"Type message...\" className=\"message-answer-input\"/>\n                <Icon name=\"pencil alternate\" color=\"grey\"/>\n              </div>\n            </ul>\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}