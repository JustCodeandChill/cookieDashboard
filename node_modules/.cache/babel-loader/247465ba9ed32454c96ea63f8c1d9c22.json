{"ast":null,"code":"var _jsxFileName = \"/home/alexkimory/react-test/src/components/section/charts/Doughnut.js\";\nimport React from \"react\";\nimport { Chart } from \"chart.js\";\n\nclass DoughnutChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n\n    this.renderChart = () => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      new Chart(myChartRef, {\n        type: \"doughnut\",\n        data: {\n          labels: [\"Chocolate\", \"Vanilla Cream\", \"Cherry\", \"Coconut\", \"Raisin\"],\n          datasets: [{\n            backgroundColor: [\"#7c3c21\", \"#888888\", \"#ea9a96\", \"#ec823a\", \"#79d70f\"],\n            data: [30, 30, 20, 10, 5]\n          }]\n        },\n        options: {\n          title: {\n            display: true,\n            text: \"% of cookie Flavor\"\n          }\n        }\n      }); // this.chartRef.current.style.backgroundColor = '#c7ceea'\n    };\n  }\n\n  componentDidMount() {\n    this.renderChart();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"no-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Cookie flavor preferences \"), /*#__PURE__*/React.createElement(\"canvas\", {\n      className: \"gray-background round-radius\",\n      height: this.props.height,\n      style: {\n        paddingBottom: \"15px\"\n      },\n      id: \"myChart\",\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default DoughnutChart;","map":{"version":3,"sources":["/home/alexkimory/react-test/src/components/section/charts/Doughnut.js"],"names":["React","Chart","DoughnutChart","Component","chartRef","createRef","renderChart","myChartRef","current","getContext","type","data","labels","datasets","backgroundColor","options","title","display","text","componentDidMount","render","marginBottom","props","height","paddingBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,UAAtB;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,QAD0C,GAC/BJ,KAAK,CAACK,SAAN,EAD+B;;AAAA,SAO1CC,WAP0C,GAO5B,MAAM;AAClB,YAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,UAAIR,KAAJ,CAAUM,UAAV,EAAsB;AACpBG,QAAAA,IAAI,EAAE,UADc;AAGpBC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,CAAC,WAAD,EAAc,eAAd,EAA+B,QAA/B,EAAyC,SAAzC,EAAoD,QAApD,CADJ;AAEJC,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,EAIf,SAJe,EAKf,SALe,CADnB;AAQEH,YAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,CAAjB;AARR,WADQ;AAFN,SAHc;AAkBpBI,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,IADJ;AAELC,YAAAA,IAAI,EAAE;AAFD;AADA;AAlBW,OAAtB,EAHkB,CA6BlB;AACD,KArCyC;AAAA;;AAG1CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,WAAL;AACD;;AAkCDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAEE;AACE,MAAA,SAAS,EAAC,8BADZ;AAEE,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAFrB;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAHT;AAIE,MAAA,EAAE,EAAC,SAJL;AAKE,MAAA,GAAG,EAAE,KAAKpB,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAYD;;AApDyC;;AAuD5C,eAAeF,aAAf","sourcesContent":["import React from \"react\";\nimport { Chart } from \"chart.js\";\n\nclass DoughnutChart extends React.Component {\n  chartRef = React.createRef();\n\n  componentDidMount() {\n    this.renderChart();\n  }\n\n  renderChart = () => {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    new Chart(myChartRef, {\n      type: \"doughnut\",\n\n      data: {\n        labels: [\"Chocolate\", \"Vanilla Cream\", \"Cherry\", \"Coconut\", \"Raisin\"],\n        datasets: [\n          {\n            backgroundColor: [\n              \"#7c3c21\",\n              \"#888888\",\n              \"#ea9a96\",\n              \"#ec823a\",\n              \"#79d70f\",\n            ],\n            data: [30, 30, 20, 10, 5],\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: true,\n          text: \"% of cookie Flavor\",\n        },\n      },\n    });\n\n    // this.chartRef.current.style.backgroundColor = '#c7ceea'\n  };\n\n  render() {\n    return (\n      <div style={{ marginBottom: \"30px\" }}>\n        <h3 className=\"no-margin\">Cookie flavor preferences </h3>\n        <canvas\n          className=\"gray-background round-radius\"\n          height={this.props.height}\n          style={{ paddingBottom: \"15px\" }}\n          id=\"myChart\"\n          ref={this.chartRef}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;\n"]},"metadata":{},"sourceType":"module"}