{"ast":null,"code":"var _jsxFileName = \"/home/alexkimory/react-test/src/components/SideBar.js\";\nimport React from \"react\";\nimport { Checkbox, Grid, Header, Image, Menu, Ref, Segment, Sidebar } from \"semantic-ui-react\";\n\nconst SideBar = () => {\n  const segmentRef = React.useRef();\n  const [visible, setVisible] = React.useState(false);\n  return /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: visible,\n    label: {\n      children: /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 30\n        }\n      }, \"visible\")\n    },\n    onChange: (e, data) => setVisible(data.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar.Pushable, {\n    as: Segment.Group,\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    as: Menu,\n    animation: \"overlay\",\n    icon: \"labeled\",\n    inverted: true,\n    onHide: () => setVisible(false),\n    vertical: true,\n    target: segmentRef,\n    visible: visible,\n    width: \"thin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Menu.Item, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Games\"), /*#__PURE__*/React.createElement(Menu.Item, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Channels\")), /*#__PURE__*/React.createElement(Ref, {\n    innerRef: segmentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Clickable area\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"When you will click there, the sidebar will be closed.\"))))));\n};\n\nexport default SideBar;","map":{"version":3,"sources":["/home/alexkimory/react-test/src/components/SideBar.js"],"names":["React","Checkbox","Grid","Header","Image","Menu","Ref","Segment","Sidebar","SideBar","segmentRef","useRef","visible","setVisible","useState","children","e","data","checked","Group"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,GANF,EAOEC,OAPF,EAQEC,OARF,QASO,mBATP;;AAWA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,UAAU,GAAGV,KAAK,CAACW,MAAN,EAAnB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,KAAK,CAACc,QAAN,CAAe,KAAf,CAA9B;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ,KAFT;AAGE,IAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,IAAJ,KAAaJ,UAAU,CAACI,IAAI,CAACC,OAAN,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,EAAE,EAAEX,OAAO,CAACY,KAA9B;AAAqC,IAAA,MAAM,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAEd,IADN;AAEE,IAAA,SAAS,EAAC,SAFZ;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,MAAM,EAAE,MAAMQ,UAAU,CAAC,KAAD,CAL1B;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,MAAM,EAAEH,UAPV;AAQE,IAAA,OAAO,EAAEE,OARX;AASE,IAAA,KAAK,EAAC,MATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF,eAaE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,CADF,eAiBE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAEF,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFF,CADF,CAjBF,CADF,CATF,CADF;AAuCD,CA3CD;;AA6CA,eAAeD,OAAf","sourcesContent":["import React from \"react\";\nimport {\n  Checkbox,\n  Grid,\n  Header,\n  Image,\n  Menu,\n  Ref,\n  Segment,\n  Sidebar,\n} from \"semantic-ui-react\";\n\nconst SideBar = () => {\n  const segmentRef = React.useRef();\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <Grid columns={1}>\n      \n        <Checkbox\n          checked={visible}\n          label={{ children: <code>visible</code> }}\n          onChange={(e, data) => setVisible(data.checked)}\n        />\n  \n\n      <Grid.Column>\n        <Sidebar.Pushable as={Segment.Group} raised>\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            icon=\"labeled\"\n            inverted\n            onHide={() => setVisible(false)}\n            vertical\n            target={segmentRef}\n            visible={visible}\n            width=\"thin\"\n          >\n            <Menu.Item as=\"a\">Home</Menu.Item>\n            <Menu.Item as=\"a\">Games</Menu.Item>\n            <Menu.Item as=\"a\">Channels</Menu.Item>\n          </Sidebar>\n\n          <Ref innerRef={segmentRef}>\n            <Segment secondary>\n              <Header as=\"h3\">Clickable area</Header>\n              <p>When you will click there, the sidebar will be closed.</p>\n            </Segment>\n          </Ref>\n\n        </Sidebar.Pushable>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}