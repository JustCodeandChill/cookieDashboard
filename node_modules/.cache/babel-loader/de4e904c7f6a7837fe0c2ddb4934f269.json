{"ast":null,"code":"var _jsxFileName = \"/home/alexkimory/react-test/src/components/section/charts/BarChart.js\";\nimport React from \"react\";\nimport { Chart } from \"chart.js\";\nimport generateYearArray from \"../../../utils/generateYearArray\";\nimport { generateRandomNumberArray } from \"../../../utils/generateRandomNumber\";\nconst SIZE = 5;\n\nclass BarChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n\n    this.componentDidMount = () => {\n      this.props.horizontal ? this.renderHorizontalChart() : this.renderChart();\n    };\n\n    this.renderHorizontalChart = () => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      new Chart(myChartRef, {\n        type: \"horizontalBar\",\n        data: {\n          labels: [\"5 stars\", \"4 stars\", \"3 stars\", \"2 stars\", \"1 star\"],\n          datasets: [{\n            label: \"Population (millions)\",\n            backgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\"],\n            data: [100, 2, 2, 7, 43]\n          }]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          title: {\n            display: true,\n            text: this.props.chart\n          }\n        }\n      });\n    };\n\n    this.renderChart = () => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      new Chart(myChartRef, {\n        type: \"bar\",\n        data: {\n          labels: generateYearArray(SIZE),\n          datasets: [{\n            label: \"dollar (thousand)\",\n            backgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\"],\n            data: generateRandomNumberArray(SIZE, 1000)\n          }]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          title: {\n            display: true,\n            text: this.props.chartTitle\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"no-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, this.props.text), /*#__PURE__*/React.createElement(\"canvas\", {\n      className: \"gray-background\",\n      style: {\n        paddingBottom: \"15px\"\n      },\n      id: \"myChart\",\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/home/alexkimory/react-test/src/components/section/charts/BarChart.js"],"names":["React","Chart","generateYearArray","generateRandomNumberArray","SIZE","BarChart","Component","chartRef","createRef","componentDidMount","props","horizontal","renderHorizontalChart","renderChart","myChartRef","current","getContext","type","data","labels","datasets","label","backgroundColor","options","legend","display","title","text","chart","chartTitle","render","marginTop","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Chart } from \"chart.js\";\nimport generateYearArray from \"../../../utils/generateYearArray\";\nimport { generateRandomNumberArray } from \"../../../utils/generateRandomNumber\";\nconst SIZE = 5;\nclass BarChart extends React.Component {\n  chartRef = React.createRef();\n\n  componentDidMount = () => {\n    this.props.horizontal ? this.renderHorizontalChart() : this.renderChart();\n  };\n  renderHorizontalChart = () => {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: \"horizontalBar\",\n      data: {\n        labels: [\"5 stars\", \"4 stars\", \"3 stars\", \"2 stars\", \"1 star\"],\n        datasets: [\n          {\n            label: \"Population (millions)\",\n            backgroundColor: [\n              \"#3e95cd\",\n              \"#8e5ea2\",\n              \"#3cba9f\",\n              \"#e8c3b9\",\n              \"#c45850\",\n            ],\n            data: [100, 2,2, 7, 43],\n          },\n        ],\n      },\n      options: {\n        legend: { display: false },\n        title: {\n          display: true,\n          text: this.props.chart,\n        },\n      },\n    });\n  };\n\n  renderChart = () => {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    new Chart(myChartRef, {\n      type: \"bar\",\n      data: {\n        labels: generateYearArray(SIZE),\n        datasets: [\n          {\n            label: \"dollar (thousand)\",\n            backgroundColor: [\n              \"#3e95cd\",\n              \"#8e5ea2\",\n              \"#3cba9f\",\n              \"#e8c3b9\",\n              \"#c45850\",\n            ],\n            data: generateRandomNumberArray(SIZE, 1000),\n          },\n        ],\n      },\n      options: {\n        legend: { display: false },\n        title: {\n          display: true,\n          text: this.props.chartTitle,\n        },\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ marginTop: \"15px\" }}>\n        <h5 className=\"no-margin\">{this.props.text}</h5>\n        <canvas\n          className=\"gray-background\"\n          style={{ paddingBottom: \"15px\" }}\n          id=\"myChart\"\n          ref={this.chartRef}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}