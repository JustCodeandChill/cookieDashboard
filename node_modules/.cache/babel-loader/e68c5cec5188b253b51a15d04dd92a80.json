{"ast":null,"code":"var _jsxFileName = \"/home/alexkimory/react-test/src/components/section/ChangableStatistic.js\";\nimport React from \"react\";\nimport { Statistic, Icon } from \"semantic-ui-react\";\nimport '../../styles/Statistic.css';\n\nclass ChangableStatistic extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 1000\n    };\n\n    this.componentDidMount = () => {\n      this.updateCount();\n    };\n\n    this.updateCount = () => {\n      let newCount;\n      setInterval(() => {\n        newCount = Math.floor(this.state.count + Math.random(30) * 10);\n        this.setState({\n          count: newCount\n        });\n      }, 2000);\n    };\n\n    this.renderContent = () => {\n      const {\n        icon\n      } = this.props.icon;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"statistic-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: icon.name,\n        size: \"huge\",\n        color: icon.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Statistic, {\n        horizontal: true,\n        className: \"number-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Statistic.Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, this.state.count), /*#__PURE__*/React.createElement(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, this.props.text)));\n    };\n  }\n\n  render() {\n    return this.renderContent();\n  }\n\n}\n\nexport default ChangableStatistic;","map":{"version":3,"sources":["/home/alexkimory/react-test/src/components/section/ChangableStatistic.js"],"names":["React","Statistic","Icon","ChangableStatistic","Component","state","count","componentDidMount","updateCount","newCount","setInterval","Math","floor","random","setState","renderContent","icon","props","name","color","text","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,OAAO,4BAAP;;AACA,MAAMC,kBAAN,SAAiCH,KAAK,CAACI,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAE/CC,KAF+C,GAEvC;AACNC,MAAAA,KAAK,EAAE;AADD,KAFuC;;AAAA,SAM/CC,iBAN+C,GAM3B,MAAM;AACxB,WAAKC,WAAL;AACD,KAR8C;;AAAA,SAW/CA,WAX+C,GAWjC,MAAM;AAClB,UAAIC,QAAJ;AACAC,MAAAA,WAAW,CAAC,MAAM;AAChBD,QAAAA,QAAQ,GAAGE,IAAI,CAACC,KAAL,CAAW,KAAKP,KAAL,CAAWC,KAAX,GAAmBK,IAAI,CAACE,MAAL,CAAY,EAAZ,IAAkB,EAAhD,CAAX;AACA,aAAKC,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEG;AAAT,SAAd;AACD,OAHU,EAGR,IAHQ,CAAX;AAID,KAjB8C;;AAAA,SAmB/CM,aAnB+C,GAmB/B,MAAM;AACpB,YAAM;AAACC,QAAAA;AAAD,UAAS,KAAKC,KAAL,CAAWD,IAA1B;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAI,CAACE,IAAjB;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAEF,IAAI,CAACG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,SAAD;AAAW,QAAA,UAAU,MAArB;AAAsB,QAAA,SAAS,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB,KAAKd,KAAL,CAAWC,KAA7B,CADF,eAEE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB,KAAKW,KAAL,CAAWG,IAA7B,CAFF,CAFF,CADF;AASD,KA/B8C;AAAA;;AAgC/CC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKN,aAAL,EAAP;AACD;;AAlC8C;;AAqCjD,eAAeZ,kBAAf","sourcesContent":["import React from \"react\";\nimport { Statistic, Icon } from \"semantic-ui-react\";\nimport '../../styles/Statistic.css'\nclass ChangableStatistic extends React.Component {\n  //Change the default number here\n  state = {\n    count: 1000,\n  };\n\n  componentDidMount = () => {\n    this.updateCount();\n  };\n\n  //Increase number randomly every 2 seconds\n  updateCount = () => {\n    let newCount;\n    setInterval(() => {\n      newCount = Math.floor(this.state.count + Math.random(30) * 10);\n      this.setState({ count: newCount });\n    }, 2000);\n  };\n\n  renderContent = () => {\n    const {icon} = this.props.icon;\n\n    return (\n      <div className=\"statistic-container\">\n        <Icon name={icon.name} size='huge' color={icon.color}/>\n        <Statistic horizontal className=\"number-text\">\n          <Statistic.Value>{this.state.count}</Statistic.Value>\n          <Statistic.Label>{this.props.text}</Statistic.Label>\n        </Statistic>\n      </div>\n    );\n  };\n  render() {\n    return this.renderContent();\n  }\n}\n\nexport default ChangableStatistic;\n"]},"metadata":{},"sourceType":"module"}