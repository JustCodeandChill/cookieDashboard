{"ast":null,"code":"var _jsxFileName = \"/home/alexkimory/react-test/src/components/section/charts/ChartSection.js\";\nimport React from \"react\";\nimport { Grid } from \"semantic-ui-react\"; //charts import\n\nimport ChangableStatistic from \"./ChangableStatistic\";\nimport UnchangeableStatiscitc from \"./UnchangableStatistic\";\nimport TimeSerie from \"./TimeSerie\";\nimport DoughnutChart from \"./Doughnut\";\nimport BarChart from \"./BarChart\";\nimport PolarChart from \"./PolarChart\";\nimport List from \"./List\";\n\nconst ChartSection = () => {\n  return /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChangableStatistic, {\n    name: \"dollar sign\",\n    color: \"#77df79\",\n    degreeOfChange: 100,\n    text: \"Cookie Sold\",\n    label: \"today\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ChangableStatistic, {\n    name: \"trash\",\n    color: \"red\",\n    degreeOfChange: 1.05,\n    text: \"Cookie Wasted\",\n    label: \"today\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(UnchangeableStatiscitc, {\n    name: \"pointing right\",\n    color: \"green\",\n    text: \"Daily Estimated Profit\",\n    label: \"$\",\n    number: \"5600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(UnchangeableStatiscitc, {\n    name: \"pointing right\",\n    color: \"red\",\n    text: \"Daily Estimated Cost\",\n    label: \"$\",\n    number: \"1470\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    green: true,\n    text: \"Best seller\",\n    data: [\"Mommy Chocolate Chip\", \"2nd Cherry Blossom Sweeet Pie\", \"3rd 3-stacks-vanilla Pie\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    green: false,\n    text: \"Worst seller\",\n    data: [\"Raisin Extra Sour\", \"2nd Dark Chocolate Pie\", \"3rd Rainbow Twisted\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DoughnutChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolarChart, {\n    text: \"Customer by nationality\",\n    chartTitle: `Quantity of customer nationality`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TimeSerie, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BarChart, {\n    horizontal: true,\n    text: \"Customer satisfaction\",\n    chartTitle: `In the first 6 months of ${new Date().getUTCFullYear()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BarChart, {\n    text: \"Yearly Profit\",\n    chartTitle: \"The last 5 year profit (thousand dollars)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ChartSection;","map":{"version":3,"sources":["/home/alexkimory/react-test/src/components/section/charts/ChartSection.js"],"names":["React","Grid","ChangableStatistic","UnchangeableStatiscitc","TimeSerie","DoughnutChart","BarChart","PolarChart","List","ChartSection","Date","getUTCFullYear"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n//charts import\nimport ChangableStatistic from \"./ChangableStatistic\";\nimport UnchangeableStatiscitc from \"./UnchangableStatistic\";\nimport TimeSerie from \"./TimeSerie\";\nimport DoughnutChart from \"./Doughnut\";\nimport BarChart from \"./BarChart\";\nimport PolarChart from \"./PolarChart\";\nimport List from \"./List\";\n\nconst ChartSection = () => {\n  return (\n    <Grid.Row>\n      <Grid.Column width={4}>\n        <ChangableStatistic\n          name=\"dollar sign\"\n          color=\"#77df79\"\n          degreeOfChange={100}\n          text=\"Cookie Sold\"\n          label=\"today\"\n        />\n        <ChangableStatistic\n          name=\"trash\"\n          color=\"red\"\n          degreeOfChange={1.05}\n          text=\"Cookie Wasted\"\n          label=\"today\"\n        />\n        <UnchangeableStatiscitc\n          name=\"pointing right\"\n          color=\"green\"\n          text=\"Daily Estimated Profit\"\n          label=\"$\"\n          number=\"5600\"\n        />\n        <UnchangeableStatiscitc\n          name=\"pointing right\"\n          color=\"red\"\n          text=\"Daily Estimated Cost\"\n          label=\"$\"\n          number=\"1470\"\n        />\n        <List\n          green\n          text=\"Best seller\"\n          data={[\n            \"Mommy Chocolate Chip\",\n            \"2nd Cherry Blossom Sweeet Pie\",\n            \"3rd 3-stacks-vanilla Pie\",\n          ]}\n        />\n        <List\n          green={false}\n          text=\"Worst seller\"\n          data={[\n            \"Raisin Extra Sour\",\n            \"2nd Dark Chocolate Pie\",\n            \"3rd Rainbow Twisted\",\n          ]}\n        />\n      </Grid.Column>\n      <Grid.Column width={7}>\n        <DoughnutChart />\n        <PolarChart\n          text=\"Customer by nationality\"\n          chartTitle={`Quantity of customer nationality`}\n        />\n      </Grid.Column>\n\n      <Grid.Column width={5}>\n        <TimeSerie />\n\n        <BarChart\n          horizontal\n          text=\"Customer satisfaction\"\n          chartTitle={`In the first 6 months of ${new Date().getUTCFullYear()}`}\n        />\n\n        <BarChart\n          text=\"Yearly Profit\"\n          chartTitle=\"The last 5 year profit (thousand dollars)\"\n        />\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\n\nexport default ChartSection;\n"]},"metadata":{},"sourceType":"module"}