{"ast":null,"code":"var _jsxFileName = \"/home/alexkimory/react-test/src/components/section/charts/TimeSerie.js\";\nimport React from \"react\";\nimport { Chart } from \"chart.js\";\n\nclass TimeSerie extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n\n    this.updateTimeSerieEveryXSeconds = () => {\n      setInterval(() => {\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        new Chart(myChartRef, {\n          type: \"line\",\n          data: {\n            //Bring in data\n            labels: [\"Jan\", \"Feb\", \"March\"],\n            datasets: [{\n              borderColor: \"red\",\n              showLine: true,\n              fill: false,\n              label: \"Customer in store\",\n              data: [86, 67, 91, 92, 103]\n            }]\n          },\n          options: {\n            scales: {\n              yAxes: [{\n                stacked: true\n              }]\n            }\n          }\n        });\n      }, 2000);\n    };\n  }\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: [\"Jan\", \"Feb\", \"March\"],\n        datasets: [{\n          borderColor: \"red\",\n          showLine: true,\n          fill: false,\n          label: \"Customer in store\",\n          data: [{\n            x: 10,\n            y: 20\n          }, {\n            x: 15,\n            y: 10\n          }, {\n            x: 40,\n            y: 60\n          }, {\n            x: 20,\n            y: 70\n          }]\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              suggestedMin: 0,\n              suggestedMax: 100\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TimeSerie;","map":{"version":3,"sources":["/home/alexkimory/react-test/src/components/section/charts/TimeSerie.js"],"names":["React","Chart","TimeSerie","Component","chartRef","createRef","updateTimeSerieEveryXSeconds","setInterval","myChartRef","current","getContext","type","data","labels","datasets","borderColor","showLine","fill","label","options","scales","yAxes","stacked","componentDidMount","x","y","ticks","suggestedMin","suggestedMax","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,UAAtB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,QADsC,GAC3BJ,KAAK,CAACK,SAAN,EAD2B;;AAAA,SAgDtCC,4BAhDsC,GAgDP,MAAM;AACnCC,MAAAA,WAAW,CAAC,MAAM;AAChB,cAAMC,UAAU,GAAG,KAAKJ,QAAL,CAAcK,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,YAAIT,KAAJ,CAAUO,UAAV,EAAsB;AACpBG,UAAAA,IAAI,EAAE,MADc;AAEpBC,UAAAA,IAAI,EAAE;AACJ;AACAC,YAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAFJ;AAGJC,YAAAA,QAAQ,EAAE,CACR;AACEC,cAAAA,WAAW,EAAE,KADf;AAEEC,cAAAA,QAAQ,EAAE,IAFZ;AAGEC,cAAAA,IAAI,EAAE,KAHR;AAIEC,cAAAA,KAAK,EAAE,mBAJT;AAKEN,cAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,GAAjB;AALR,aADQ;AAHN,WAFc;AAepBO,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAE,CACL;AACEC,gBAAAA,OAAO,EAAE;AADX,eADK;AADD;AADD;AAfW,SAAtB;AAyBD,OA5BU,EA4BR,IA5BQ,CAAX;AA6BD,KA9EqC;AAAA;;AAGtCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMf,UAAU,GAAG,KAAKJ,QAAL,CAAcK,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,QAAIT,KAAJ,CAAUO,UAAV,EAAsB;AACpBG,MAAAA,IAAI,EAAE,MADc;AAEpBC,MAAAA,IAAI,EAAE;AACJ;AACAC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAFJ;AAGJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,WAAW,EAAE,KADf;AAEEC,UAAAA,QAAQ,EAAE,IAFZ;AAGEC,UAAAA,IAAI,EAAE,KAHR;AAIEC,UAAAA,KAAK,EAAE,mBAJT;AAKEN,UAAAA,IAAI,EAAE,CACJ;AACEY,YAAAA,CAAC,EAAE,EADL;AAEEC,YAAAA,CAAC,EAAE;AAFL,WADI,EAKJ;AACED,YAAAA,CAAC,EAAE,EADL;AAEEC,YAAAA,CAAC,EAAE;AAFL,WALI,EASJ;AAAED,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WATI,EAUJ;AAAED,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WAVI;AALR,SADQ;AAHN,OAFc;AA0BpBN,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,OAAO,EAAE,IADX;AAEEI,YAAAA,KAAK,EAAE;AACLC,cAAAA,YAAY,EAAE,CADT;AAELC,cAAAA,YAAY,EAAE;AAFT;AAFT,WADK;AADD;AADD;AA1BW,KAAtB;AAwCD;;AAkCDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,GAAG,EAAE,KAAKzB,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtFqC;;AAyFxC,eAAeF,SAAf","sourcesContent":["import React from \"react\";\nimport { Chart } from \"chart.js\";\n\nclass TimeSerie extends React.Component {\n  chartRef = React.createRef();\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: [\"Jan\", \"Feb\", \"March\"],\n        datasets: [\n          {\n            borderColor: \"red\",\n            showLine: true,\n            fill: false,\n            label: \"Customer in store\",\n            data: [\n              {\n                x: 10,\n                y: 20,\n              },\n              {\n                x: 15,\n                y: 10,\n              },\n              { x: 40, y: 60 },\n              { x: 20, y: 70 },\n            ],\n          },\n        ],\n      },\n      options: {\n        scales: {\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                suggestedMin: 0,\n                suggestedMax: 100,\n              },\n            },\n          ],\n        },\n      },\n    });\n  }\n\n  updateTimeSerieEveryXSeconds = () => {\n    setInterval(() => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n      new Chart(myChartRef, {\n        type: \"line\",\n        data: {\n          //Bring in data\n          labels: [\"Jan\", \"Feb\", \"March\"],\n          datasets: [\n            {\n              borderColor: \"red\",\n              showLine: true,\n              fill: false,\n              label: \"Customer in store\",\n              data: [86, 67, 91, 92, 103],\n            },\n          ],\n        },\n        options: {\n          scales: {\n            yAxes: [\n              {\n                stacked: true,\n              },\n            ],\n          },\n        },\n      });\n    }, 2000);\n  };\n\n  render() {\n    return (\n      <div>\n        <canvas id=\"myChart\" ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n\nexport default TimeSerie;\n"]},"metadata":{},"sourceType":"module"}